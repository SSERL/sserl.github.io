@article{LBT2015:IJPP,
 abstract = {SyDPaCC is a set of libraries for the Coq proof 
assistant. It allows to write naive functional 
programs (i.e. with high complexity) that are 
considered as specifications, and to transform them 
into more efficient versions. These more efficient 
versions can then be automatically parallelised 
before being extracted from Coq into source code for 
the functional language OCaml together with calls to 
the Bulk Synchronous Parallel ML (BSML) library. In 
this paper we present a new core version of SyDPaCC 
for the development of parallel programs 
correct-by-contruction using the theory of list 
homomorphisms and algorithmic skeletons implemented 
and verified in Coq. The framework is illustrated on 
the the maximum prefix sum problem.},
 author = {Loulergue, Frédéric and Bousdira, Wadoud and 
Tesson, Julien},
 doi = {10.1007/s10766-016-0415-8},
 hlpp_category = {journal},
 hlpp_ranking = {A},
 issue = {2},
 journal = {Int J Parallel Prog},
 pages = {300-319},
 title = {Calculating Parallel Programs in Coq using List 
Homomorphisms},
 volume = {45},
 year = {2017}
}

