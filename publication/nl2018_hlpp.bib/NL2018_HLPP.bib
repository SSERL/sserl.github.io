@inproceedings{NL2018:HLPP,
 abstract = {Divide&Conquer (DC) represents an important design  
pattern for parallel programs.  Powerlists are data  
structures that could be successfully used for  
defining parallel programs based on this paradigm.  
These parallel recursive data structures and their  
algebraic theories offer both a methodology to  
design parallel algorithms and parallel programming  
abstractions to ease the development of parallel  
applications.  The paper presents an improvement of  
the parallel recursive programs defined based on  
powerlists. The improvements is achieved by applying  
transformation rules that introduce tuple functions  
and prefix operators, for which a more efficient  
execution model is defined. Together with the  
execution model, a cost model is also defined in  
order to allow a proper evaluation.  The treated  
examples emphasize the fact that the transformation  
leads to important improvements of the programs, by  
reducing their theoretical time-complexities, and  
the number of recursive calls, and also by allowing  
splitting and combining of different data structures  
to be packed together. Also, enhancing the function  
that has to be computed to other useful functions  
using a tuple, could improved the cost reduction  
even more.},
 address = {Orléans, France},
 author = {Niculescu, Virginia and Loulergue, Frédéric},
 booktitle = {High Level Parallel Programming and Applications  
(HLPP)},
 hlpp_educore = {C},
 publication_types = {international_conference_communication},
 title = {Transforming Powerlist Based Divide&Conquer  
Programs for an Improved Execution Model},
 year = {2018}
}

