@inproceedings{LOU2017:PDCAT,
 abstract = {Skeletal parallelism offers a good trade-off between 
programming productivity and execution 
efficiency. In this style of parallelism, an 
application is a composition of algorithmic 
skeletons. An algorithmic skeleton captures a 
pattern of parallel algorithm on a distributed data 
structure, and is also often associated with a 
sequential algorithm on a sequential data structure 
that is the counterpart of the parallel data 
structure. The algorithmic skeleton approach has 
been inspired by functional programming.  It is 
therefore very natural to embed algorithmic 
skeletons in a functional programming language. In 
this paper we present a new algorithmic skeleton 
library for the statically typed functional language 
OCaml, and illustrate its use on some 
applications. This functional skeletal parallel 
programming library is implemented using the Bulk 
Synchronous Parallel ML parallel programming library 
for OCaml.},
 author = {Loulergue, Frédéric},
 booktitle = {Parallel and Distributed Computing, Applications and Technologies (PDCAT)},
 doi = {10.1109/PDCAT.2017.00079},
 hlpp_category = {international_conference},
 hlpp_educore = {B},
 pages = {461-468},
 publisher = {IEEE},
 title = {Implementing Algorithmic Skeletons with Bulk 
Synchronous Parallel ML},
 year = {2017}
}

