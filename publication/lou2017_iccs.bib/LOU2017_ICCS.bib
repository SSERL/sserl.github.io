@inproceedings{LOU2017:ICCS,
 abstract = {Bulk synchronous parallelism (BSP) oﬀers an abstract 
and simple model of parallelism yet allows to take 
realistically into account the communication costs 
of parallel algorithms. BSP has been used in many 
application domains. BSPlib and its variants are 
programming libraries for the C language that 
support the BSP style.  Bulk Synchronous Parallel ML 
(BSML) is a library for BSP programming with the 
functional language OCaml. It is based on an 
extension of the lambda-calculus by parallel 
operations on a data structure named parallel 
vector. BSML oﬀers a global view of programs, 
i.e. BSML programs can be seen as sequential 
programs working on a parallel data structure (seq 
of par) while a BSPlib program is written in the 
SPMD style and understood as a parallel composition 
of communicating sequential programs (par of 
seq). The communication styles of BSML and BSPlib 
are also quite diﬀerent. },
 address = {Zurich, Switzerland},
 author = {Loulergue, Frédéric},
 booktitle = {International Conference on Computational Science (ICCS)},
 doi = {10.1016/j.procs.2017.05.267},
 hlpp_category = {international_conference},
 hlpp_educore = {A},
 pages = {2368-2372},
 publisher = {Elsevier},
 series = {Procedia Computer Science},
 title = {Imperative BSPlib-style Communications in Bulk 
Synchronous Parallel ML},
 year = {2017}
}

