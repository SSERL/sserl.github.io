@article{THL2017:PPL,
 abstract = {Bulk-Synchronous Parallel (BSP) is a bridging model 
between abstract execution and concrete parallel 
architectures that retains enough information to 
model performance scalability. In order to model BSP 
program executions, Hains adapted the theory of 
finite automata to the BSP paradigm by introducing 
BSP automata.  In the initial description of the 
theory, BSP automata had to be explicitly defined as 
structured sets of states and transitions. The lack 
of a clean and efficient algorithm for generating 
them from regular expressions would have prevented 
this theory from being used in practice.  To 
alleviate this problem we introduce in this paper an 
algorithm that generates a BSP automaton recognizing 
a BSP language defined by a BSP regular 
expression. The main practical use of BSP automata 
developed in this paper is the parallelization of 
finite state automata with an explicit distribution 
and a performance model, that enable parallel 
matching of regular expressions. Secondarily, BSP 
regular expressions provide a convenient structure 
for automatic code generation of imperative BSP 
program that is also developed in this paper.},
 author = {Tachon, Thibaut and Li, Chong and Hains, Gaétan 
and Loulergue, Frédéric},
 doi = {10.1142/S0129626417400023},
 hlpp_category = {journal},
 journal = {Parallel Processing Letters},
 number = {1},
 title = {Automated generation of BSP automata},
 volume = {17},
 year = {2017}
}

